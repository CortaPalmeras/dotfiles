# ~/.bashrc

source $HOME/.profile

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

deb_col='\[\e[91m\]'
host_col='\[\e[94m\]'
dir_col='\[\e[95m\]'
git_col='\[\e[96m\]'
prompt_col='\[\e[37m\]'
white='\[\e[0m\]'
exit_col='\[\e[91m\]'

prompt_icon='$ '
dir_sep='...'

git_branch='(b: '
git_tag='(t: '
git_commit='(c: '
git_end=') '

exit_icon='(e: '
exit_end=') '

if [[ "$TERM" == "xterm-kitty" ]]; then
    deb_icon=' '
    prompt_icon=' '
    dir_sep='....'

    git_branch=' '
    git_tag=' '
    git_commit=' '
    git_end=' '

    exit_icon=' '
    exit_end=' '
fi

short_dir=''
git_status=''
exit_status=''

update_prompt() {
    # update exit status
    exit_status=$?
    if [[ "$exit_status" == '0' ]]; then
        exit_status=''
    else
        exit_status="$exit_icon$exit_status$exit_end"
    fi

    # update formatted dir
    short_dir=$(pwd)
    if [[ $short_dir == $HOME* ]]; then
        short_dir=$(echo ~${short_dir#$HOME} | sed "s|/.*/|/$dir_sep/|")

    elif [[ $short_dir == '/' ]]; then
        short_dir='/'

    else
        short_dir=$(echo ${short_dir#/} | sed "s|/.*/|/$dir_sep/|")
    fi

    # update git status
    git_status=$(git rev-parse --git-dir 2>/dev/null)
    if [[ -n $git_status ]]; then
        # if on a branch
        git_status=$(git symbolic-ref --short HEAD 2>/dev/null)
        if [[ -n $git_status ]]; then
            git_status="$git_branch$git_status$git_end"
            return
        fi

        # if on a tag
        git_status=$(git describe --tags --exact-match 2>/dev/null)
        if [[ -n $git_status ]]; then
            git_status="$git_tag$git_status$git_end"
            return
        fi

        # else use commit hash
        git_status="$git_commit$(git rev-parse --short HEAD 2>/dev/null)$git_end"
    fi
}

PROMPT_COMMAND='update_prompt'
PS1="$deb_col$deb_icon$host_col\u@\H $dir_col\$short_dir $git_col\$git_status$exit_col\$exit_status$prompt_col$prompt_icon$white"

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
for COMPLETION in "${HOMEBREW_PREFIX}/etc/bash_completion.d/"*; do
    [[ -r "${COMPLETION}" ]] && source "${COMPLETION}"
done

export VISUAL='nvim'
export EDITOR='nvim'
export SUDO_EDITOR='nvim --noplugin'

source $HOME/.bash_aliases

